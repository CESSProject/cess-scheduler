/*
   Copyright 2022 CESS scheduler authors

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

syntax = "proto3";

package protobuf;

option go_package = "./;protobuf";

message ReqMsg {
    int32   version = 1;
    uint64  id = 2;
    string  method = 3;
    string  service = 4;
    bytes   body = 5;
}

message RespMsg {
    uint64  id = 1;
    bytes   body = 2;
}

message RespBody {
    int32   code = 1;
    string  msg = 2;
    bytes   data = 3;
}

message auth_req {
    string file_id     = 1;
    string file_name   = 2;
    uint64 file_size   = 3;
    uint32 block_total = 4;
    bytes  public_key  = 5;
    bytes  msg         = 6;
    bytes  sign        = 7;
}

message file_upload_req {
    uint32 block_index = 1;
    bytes  auth        = 2;
    bytes  file_data   = 3;
}

message file_download_info {
  string  file_id = 1;
  int32   block_total = 2;
  int32   block_size = 3;
  int32   block_index = 4;
  bytes   data = 5;
}

message file_download_req{
  string  file_id = 1;
  string  walletAddress = 2;
  int32   block_index = 3;
}

//space
message space_req{
    bytes  publickey = 1;
    bytes  msg       = 2;
    bytes  sign      = 3;
}

//space_file
message space_file_req{
    string token = 1;
    uint32 block_index = 2;
}

message PutFileToBucket {
  uint32 block_total = 1;
  uint32 block_index = 2;
  string fileId      = 3;
  bytes  publickey   = 4;
  bytes  blockData   = 5;
}

message PutTagToBucket {
  string   fileId = 1;
  bytes    name = 2;
	int64    n = 3;
	repeated bytes u = 4;
  bytes    signature = 5;
  repeated bytes sigmas = 6;
}

message ReadTag_req {
  bytes  acc     = 1;
  string file_id = 2;
}

message FillerBackReq {
  bytes file_id      = 1;
  bytes file_hash    = 2;
  bytes  publickey   = 3;
}